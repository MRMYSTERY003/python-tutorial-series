Python For Loops
A for loop is used for iterating over a sequence (that is either a list, a tuple, a dictionary, a set, or a string).

This is less like the for keyword in other programming languages, and works more like an iterator method as found in other object-orientated programming languages.

With the for loop we can execute a set of statements, once for each item in a list, tuple, set etc.

Examples:
fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)
  
OUTPUT : 
apple
banana
cherry
 
The for loop does not require an indexing variable to set beforehand like we have in while loops


RANGE() :

The range() Function
To loop through a set of code a specified number of times, we can use the range() function,
The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and ends at a specified number.

EXAMPLE: 

for x in range(6):
  print(x)
  
OUTPUT:
1
2
3
4
5

Note that range(6) is not the values of 0 to 6, but the values 0 to 5.

The range() function defaults to 0 as a starting value,
however it is possible to specify the starting value by adding a parameter: range(2, 6),
which means values from 2 to 6 (but not including 6):

Example
Using the start parameter:

for x in range(2, 6):
  print(x)

OUTPUT:
2
3
4
5


The range() function defaults to increment the sequence by 1,
however it is possible to specify the increment value by adding a third parameter: range(2, 30, 3):

Example
Increment the sequence with 3 (default is 1):

for x in range(2, 30, 3):
  print(x)

OUTPUT:
2
5
8
11
15
18
21
24
27
  
